import React, { useState, useEffect, useRef } from 'react';

// --- Helper Components ---

// Icon component for consistent styling
const Icon = ({ path, className = "w-6 h-6" }) => (
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" className={className}>
    <path d={path} />
  </svg>
);

// --- SVG Icons (as components for clarity) ---
const BrainCircuitIcon = () => <Icon path="M12 2a10 10 0 0 0-10 10c0 4.42 2.87 8.17 6.84 9.5c.5.09.68-.22.68-.48v-1.7c-2.78.6-3.37-1.34-3.37-1.34c-.46-1.16-1.11-1.47-1.11-1.47c-.91-.62.07-.6.07-.6c1 .07 1.53 1.03 1.53 1.03c.89 1.53 2.34 1.09 2.91.83c.09-.65.35-1.09.63-1.34c-2.22-.25-4.55-1.11-4.55-4.94c0-1.1.39-1.99 1.03-2.69c-.1-.25-.45-1.27.1-2.65c0 0 .84-.27 2.75 1.02c.79-.22 1.65-.33 2.5-.33s1.71.11 2.5.33c1.91-1.29 2.75-1.02 2.75-1.02c.55 1.38.2 2.4.1 2.65c.64.7 1.03 1.6 1.03 2.69c0 3.84-2.34 4.68-4.57 4.93c.36.31.69.92.69 1.85V21.5c0 .27.18.58.69.48A10 10 0 0 0 22 12A10 10 0 0 0 12 2Z" />;
const ShieldCheckIcon = () => <Icon path="M9 12.75L11.25 15L15 9.75M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0Z" />;
const NetworkIcon = () => <Icon path="M10.5 1.5H8.25A2.25 2.25 0 0 0 6 3.75v16.5a2.25 2.25 0 0 0 2.25 2.25h7.5A2.25 2.25 0 0 0 18 20.25V3.75a2.25 2.25 0 0 0-2.25-2.25H13.5m-3 0V3h3V1.5m-3 0h3m-3 18.75h3" />;
const ChartBarIcon = () => <Icon path="M3 13.125C3 12.504 3.504 12 4.125 12h2.25c.621 0 1.125.504 1.125 1.125v6.75C7.5 20.496 6.996 21 6.375 21h-2.25A1.125 1.125 0 0 1 3 19.875v-6.75ZM9.75 8.625c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125v11.25c0 .621-.504 1.125-1.125 1.125h-2.25a1.125 1.125 0 0 1-1.125-1.125V8.625ZM16.5 4.125c0-.621.504-1.125 1.125-1.125h2.25C20.496 3 21 3.504 21 4.125v15.75c0 .621-.504 1.125-1.125 1.125h-2.25a1.125 1.125 0 0 1-1.125-1.125V4.125Z" />;


// --- Section Components ---

const Header = () => {
    const [isScrolled, setIsScrolled] = useState(false);

    useEffect(() => {
        const handleScroll = () => {
            setIsScrolled(window.scrollY > 10);
        };
        window.addEventListener('scroll', handleScroll);
        return () => window.removeEventListener('scroll', handleScroll);
    }, []);

    return (
        <header className={`fixed top-0 left-0 right-0 z-50 transition-all duration-300 ${isScrolled ? 'bg-black/60 backdrop-blur-md border-b border-gray-800' : 'bg-transparent'}`}>
            <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div className="flex items-center justify-between h-20">
                    <div className="flex-shrink-0">
                        <a href="#" className="text-white text-2xl font-bold tracking-wider">
                           PRAXIS
                        </a>
                    </div>
                    <nav className="hidden md:block">
                        <div className="ml-10 flex items-baseline space-x-4">
                            <a href="#about" className="text-gray-300 hover:text-blue-400 px-3 py-2 rounded-md text-sm font-medium transition-colors">About</a>
                            <a href="#services" className="text-gray-300 hover:text-blue-400 px-3 py-2 rounded-md text-sm font-medium transition-colors">Services</a>
                            <a href="#technology" className="text-gray-300 hover:text-blue-400 px-3 py-2 rounded-md text-sm font-medium transition-colors">Technology</a>
                            <a href="#casestudies" className="text-gray-300 hover:text-blue-400 px-3 py-2 rounded-md text-sm font-medium transition-colors">Case Studies</a>
                        </div>
                    </nav>
                    <div className="hidden md:block">
                        <a href="#contact" className="bg-blue-600 text-white px-4 py-2 rounded-md text-sm font-semibold hover:bg-blue-700 transition-all duration-300 shadow-lg shadow-blue-600/20">
                            Schedule Demo
                        </a>
                    </div>
                </div>
            </div>
        </header>
    );
};

const Hero = () => {
    const canvasRef = useRef(null);

    useEffect(() => {
        const canvas = canvasRef.current;
        const ctx = canvas.getContext('2d');
        let particles = [];
        let animationFrameId;

        const resizeCanvas = () => {
            canvas.width = window.innerWidth;
            canvas.height = window.innerHeight;
        };

        const createParticles = () => {
            particles = [];
            const particleCount = Math.floor((canvas.width * canvas.height) / 15000);
            for (let i = 0; i < particleCount; i++) {
                particles.push({
                    x: Math.random() * canvas.width,
                    y: Math.random() * canvas.height,
                    vx: (Math.random() - 0.5) * 0.5,
                    vy: (Math.random() - 0.5) * 0.5,
                    radius: Math.random() * 1.5 + 1,
                });
            }
        };

        const animate = () => {
            ctx.clearRect(0, 0, canvas.width, canvas.height);

            particles.forEach(p => {
                p.x += p.vx;
                p.y += p.vy;

                if (p.x < 0 || p.x > canvas.width) p.vx *= -1;
                if (p.y < 0 || p.y > canvas.height) p.vy *= -1;

                ctx.beginPath();
                ctx.arc(p.x, p.y, p.radius, 0, Math.PI * 2);
                ctx.fillStyle = 'rgba(44, 62, 80, 0.7)';
                ctx.fill();
            });

            for (let i = 0; i < particles.length; i++) {
                for (let j = i + 1; j < particles.length; j++) {
                    const dist = Math.hypot(particles[i].x - particles[j].x, particles[i].y - particles[j].y);
                    if (dist < 120) {
                        ctx.beginPath();
                        ctx.moveTo(particles[i].x, particles[i].y);
                        ctx.lineTo(particles[j].x, particles[j].y);
                        ctx.strokeStyle = `rgba(52, 152, 219, ${1 - dist / 120})`;
                        ctx.lineWidth = 0.5;
                        ctx.stroke();
                    }
                }
            }
            animationFrameId = requestAnimationFrame(animate);
        };

        resizeCanvas();
        createParticles();
        animate();

        window.addEventListener('resize', () => {
            resizeCanvas();
            createParticles();
        });

        return () => {
            window.cancelAnimationFrame(animationFrameId);
            window.removeEventListener('resize', resizeCanvas);
        };
    }, []);

    return (
        <section className="relative min-h-screen flex items-center justify-center text-center overflow-hidden bg-black">
            <canvas ref={canvasRef} className="absolute top-0 left-0 w-full h-full z-0 opacity-50"></canvas>
            <div className="relative z-10 px-4">
                <h1 className="text-4xl md:text-6xl lg:text-7xl font-extrabold text-white tracking-tighter leading-tight">
                    Engineering the Future of <span className="bg-clip-text text-transparent bg-gradient-to-r from-blue-400 to-green-400">Research Intelligence</span>
                </h1>
                <p className="mt-6 max-w-3xl mx-auto text-lg md:text-xl text-gray-300">
                    Where AI meets engineering to solve humanity's greatest challenges. Transform your research capabilities with next-generation AI engineering.
                </p>
                <div className="mt-10 flex flex-col sm:flex-row items-center justify-center gap-4">
                    <a href="#services" className="w-full sm:w-auto bg-blue-600 text-white px-8 py-3 rounded-md text-lg font-semibold hover:bg-blue-700 transition-all duration-300 shadow-lg shadow-blue-600/30 transform hover:scale-105">
                        Explore Our Platform
                    </a>
                    <a href="#contact" className="w-full sm:w-auto bg-transparent border-2 border-gray-500 text-gray-300 px-8 py-3 rounded-md text-lg font-semibold hover:bg-gray-800 hover:border-gray-700 transition-all duration-300 transform hover:scale-105">
                        Schedule Demo
                    </a>
                </div>
                <div className="mt-16 text-sm text-gray-500">
                    Trusted by leading research institutions and Fortune 500 companies
                </div>
            </div>
        </section>
    );
};

const Section = ({ id, children }) => (
    <section id={id} className="py-20 sm:py-28 px-4 sm:px-6 lg:px-8">
        <div className="max-w-7xl mx-auto">
            {children}
        </div>
    </section>
);

const SectionTitle = ({ children }) => (
    <h2 className="text-3xl sm:text-4xl lg:text-5xl font-bold text-center text-white tracking-tight">{children}</h2>
);

const SectionSubtitle = ({ children }) => (
    <p className="mt-4 max-w-2xl mx-auto text-center text-lg text-gray-400">{children}</p>
);

const About = () => {
    const capabilities = [
        { name: "Advanced Research Intelligence", icon: <BrainCircuitIcon />, desc: "Leverage AI to uncover patterns and insights beyond human capability." },
        { name: "Autonomous Discovery Systems", icon: <NetworkIcon />, desc: "Automate hypothesis generation and validation to accelerate breakthroughs." },
        { name: "Secure Data Infrastructure", icon: <ShieldCheckIcon />, desc: "Military-grade security protocols to protect your most sensitive data." },
        { name: "Cross-Domain Synthesis", icon: <ChartBarIcon />, desc: "Synthesize knowledge from disparate fields to foster unprecedented innovation." }
    ];

    return (
        <Section id="about">
            <SectionTitle>Advancing Human Knowledge</SectionTitle>
            <SectionSubtitle>Our mission is to advance human knowledge through intelligent engineering. We build systems that empower researchers to solve the world's most complex problems.</SectionSubtitle>
            <div className="mt-16 grid gap-8 md:grid-cols-2 lg:grid-cols-4">
                {capabilities.map(item => (
                    <div key={item.name} className="bg-[#1A1A1A]/50 border border-gray-800 rounded-xl p-6 text-center transform transition-all duration-300 hover:-translate-y-2 hover:border-blue-500/50 hover:shadow-2xl hover:shadow-blue-600/10">
                        <div className="mx-auto h-12 w-12 flex items-center justify-center rounded-lg bg-gray-800 text-blue-400">{item.icon}</div>
                        <h3 className="mt-6 text-lg font-semibold text-white">{item.name}</h3>
                        <p className="mt-2 text-base text-gray-400">{item.desc}</p>
                    </div>
                ))}
            </div>
        </Section>
    );
};

const Services = () => {
    const services = [
        { 
            title: "Research Intelligence Platform",
            features: ["Autonomous hypothesis generation", "Cross-domain knowledge synthesis", "Advanced pattern recognition"],
        },
        { 
            title: "Secure Research Infrastructure",
            features: ["Distributed data storage", "Cryptographic verification", "Granular access control systems"],
        },
        { 
            title: "Collaborative Research Networks",
            features: ["AI-assisted peer review systems", "Decentralized consensus mechanisms", "Automated knowledge validation"],
        },
    ];

    return (
        <Section id="services">
            <SectionTitle>A New Paradigm in Research</SectionTitle>
            <SectionSubtitle>Our integrated suite of tools provides an end-to-end solution for modern research challenges, from data ingestion to discovery validation.</SectionSubtitle>
            <div className="mt-16 grid gap-8 md:grid-cols-1 lg:grid-cols-3">
                {services.map(service => (
                    <div key={service.title} className="bg-[#1A1A1A] border border-gray-800 rounded-2xl p-8 flex flex-col">
                        <h3 className="text-2xl font-bold text-white">{service.title}</h3>
                        <ul className="mt-6 space-y-4 text-gray-300 flex-grow">
                            {service.features.map(feature => (
                                <li key={feature} className="flex items-start">
                                    <svg className="flex-shrink-0 h-6 w-6 text-green-400 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M5 13l4 4L19 7" /></svg>
                                    <span>{feature}</span>
                                </li>
                            ))}
                        </ul>
                        <a href="#" className="mt-8 block text-center bg-gray-800 text-white px-6 py-3 rounded-md font-semibold hover:bg-gray-700 transition-colors">Learn More</a>
                    </div>
                ))}
            </div>
        </Section>
    );
};

const Technology = () => (
    <Section id="technology">
        <div className="grid md:grid-cols-2 gap-16 items-center">
            <div>
                <SectionTitle>Engineered for Discovery</SectionTitle>
                <p className="mt-4 text-lg text-gray-400">
                    Our platform is built on a foundation of military-grade security, enterprise-level scalability, and unparalleled performance. We provide the robust infrastructure necessary for mission-critical research.
                </p>
                <ul className="mt-8 space-y-4">
                    <li className="flex items-center text-gray-300"><ShieldCheckIcon /> <span className="ml-3">End-to-End Encryption & Data Integrity</span></li>
                    <li className="flex items-center text-gray-300"><NetworkIcon /> <span className="ml-3">Globally Distributed & Fault-Tolerant Architecture</span></li>
                    <li className="flex items-center text-gray-300"><ChartBarIcon /> <span className="ml-3">Petabyte-Scale Processing & Real-Time Analytics</span></li>
                </ul>
            </div>
            <div className="relative h-96">
                {/* Abstract visualization of system architecture */}
                <div className="absolute inset-0 flex items-center justify-center">
                    <div className="w-64 h-64 rounded-full bg-blue-900/30 animate-pulse"></div>
                    <div className="absolute w-80 h-80 rounded-full border-2 border-blue-500/30 animate-spin-slow"></div>
                    <div className="absolute w-96 h-96 rounded-full border border-gray-700/50"></div>
                </div>
                <div className="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-white font-mono text-sm">
                    <p className="animate-fade-in-1">[CORE AI]</p>
                    <p className="animate-fade-in-2">[DATA FABRIC]</p>
                    <p className="animate-fade-in-3">[SECURE ENCLAVE]</p>
                    <p className="animate-fade-in-4">[SYNTHESIS ENGINE]</p>
                </div>
            </div>
        </div>
    </Section>
);

const CaseStudies = () => {
    const studies = [
        { title: "Genomic Sequencing Breakthrough", improvement: "95% Reduction", field: "in analysis time", color: "green" },
        { title: "Materials Science Discovery", improvement: "400% Increase", field: "in novel material identification", color: "blue" },
        { title: "Financial Market Prediction", improvement: "75% Improvement", field: "in predictive accuracy", color: "gold" },
    ];

    return (
        <Section id="casestudies">
            <SectionTitle>From Data to Discovery</SectionTitle>
            <SectionSubtitle>We show outcomes, not methods. Our platform has enabled significant breakthroughs across a wide range of industries, delivering measurable impact and accelerating innovation.</SectionSubtitle>
            <div className="mt-16 grid gap-8 md:grid-cols-3">
                {studies.map(study => (
                    <div key={study.title} className={`border-t-4 bg-[#1A1A1A] border-gray-800 rounded-lg p-8 shadow-lg transition-all duration-300 hover:shadow-2xl hover:-translate-y-1`} style={{borderTopColor: study.color === 'green' ? '#27AE60' : study.color === 'blue' ? '#3498DB' : '#F39C12'}}>
                        <h3 className="text-xl font-bold text-white">{study.title}</h3>
                        <p className="mt-4 text-5xl font-extrabold" style={{color: study.color === 'green' ? '#27AE60' : study.color === 'blue' ? '#3498DB' : '#F39C12'}}>{study.improvement}</p>
                        <p className="text-gray-400">{study.field}</p>
                        <p className="mt-6 text-gray-500">Anonymized client success story demonstrating significant performance improvements and research acceleration.</p>
                    </div>
                ))}
            </div>
        </Section>
    );
};

const Footer = () => (
    <footer className="bg-[#0A0A0A] border-t border-gray-900">
        <div className="max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:px-8 text-center">
            <p className="text-2xl font-bold text-white">PRAXIS</p>
            <div className="mt-8 flex justify-center space-x-6">
                <a href="#" className="text-gray-400 hover:text-gray-300">About</a>
                <a href="#" className="text-gray-400 hover:text-gray-300">Services</a>
                <a href="#" className="text-gray-400 hover:text-gray-300">Careers</a>
                <a href="#" className="text-gray-400 hover:text-gray-300">Contact</a>
            </div>
            <p className="mt-8 text-base text-gray-500">&copy; {new Date().getFullYear()} Praxis Research & Engineering Inc. All rights reserved.</p>
        </div>
    </footer>
);


// --- Main App Component ---

export default function App() {
    // Effect for scroll-based animations
    useEffect(() => {
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('fade-in-up');
                }
            });
        }, { threshold: 0.1 });

        document.querySelectorAll('section > div').forEach(el => {
            observer.observe(el);
        });

        return () => observer.disconnect();
    }, []);

    return (
        <div className="bg-black text-gray-300 font-['Inter',_sans-serif]">
            <style>{`
                /* Simple CSS for animations */
                @keyframes spin-slow {
                    from { transform: rotate(0deg); }
                    to { transform: rotate(360deg); }
                }
                .animate-spin-slow { animation: spin-slow 20s linear infinite; }

                @keyframes fade-in-up {
                    from { opacity: 0; transform: translateY(20px); }
                    to { opacity: 1; transform: translateY(0); }
                }
                section > div { opacity: 0; transition: opacity 0.8s ease-out, transform 0.8s ease-out; }
                .fade-in-up { opacity: 1; transform: translateY(0); }
                
                @keyframes fade-in { from { opacity: 0; } to { opacity: 1; } }
                .animate-fade-in-1 { animation: fade-in 1s ease-out 0.5s forwards; opacity: 0; }
                .animate-fade-in-2 { animation: fade-in 1s ease-out 1.0s forwards; opacity: 0; }
                .animate-fade-in-3 { animation: fade-in 1s ease-out 1.5s forwards; opacity: 0; }
                .animate-fade-in-4 { animation: fade-in 1s ease-out 2.0s forwards; opacity: 0; }
            `}</style>
            
            <Header />
            <main>
                <Hero />
                <About />
                <Services />
                <Technology />
                <CaseStudies />
            </main>
            <Footer />
        </div>
    );
}
